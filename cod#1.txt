#pragma once
#include <string>
#include <iostream>
#include <fstream>
using namespace std;
class Base85
{
private:
	string alfabet = "&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz";
public:
	string coder(char* input, int len);
	string decoder(char* input, int len);
};
string Base85::coder(char* input, int len)
{
	string output("");
	int a = len, b = a * 8 / 6;
	if (a * 8 % 6 != 0)
		b++;
	unsigned char *q;
	bool *buff;
	int j = 0;
	buff = new bool[a * 8];
	q = new unsigned char[b];
	for (int i = 1; i < a + 1; i++)
	{
		for (int k = 1; k < 9; k++)
		{
			buff[j] = (input[i - 1] >> (k - 1)) & 1;
			j++;
		}
	}
	int num = 0;
	cout << endl;
	for (int l = 0; l < b; l++)
	{
		q[l] = 0;
		for (int i = 0; i < 6; i++)
		{
			if (buff[num] == 1)
				q[l] = q[l] | (1 << i);
			num++;
		}
		output += alfabet[(unsigned int)q[l]];
	}
	return output;
}
string Base85::decoder(char* input, int len)
{
	string output("");
	int a = len, b = a * 6 / 8;
	if (a * 6 % 8 != 0)
		b++;
	unsigned char *q;
	bool *buff;
	int j = 0;
	buff = new bool[a * 6];
	q = new unsigned char[b];
	for (int i = 1; i < a + 1; i++)
	{
		for (int k = 1; k < 7; k++)
		{
			for (int l = 0; l < 85; l++)
				if (input[i - 1] == alfabet[l])
					buff[j] = (l >> (k - 1)) & 1;
			j++;
		}
	}
	int num = 0;
	for (int l = 0; l < b; l++)
	{
		q[l] = 0;
		for (int i = 0; i < 8; i++)
		{
			if (buff[num] == 1)
				q[l] = q[l] | (1 << i);
			num++;
		}
		output += q[l];
	}
	return output;
}
int main()
{
	setlocale(LC_ALL, ".1251");
	string a, k;
	try
	{
		cout << "Input file way" << endl;
		cin >> a;
		ifstream file(a, ios::binary);
		if (!file)
			throw 'f';
		cout << "Input save file way" << endl;
		cin >> k;
		ofstream file1(k, ios::binary);
		if (!file1)
			throw 'f';
		file.seekg(0, file.end);
		int l = file.tellg();
		file.seekg(0, file.beg);
		char* str = new char[l + 1];
		file.read(str, l);
		int vote;
		cout << "Inpute mode\n1.Code\n2.Decode" << endl;
		cin >> vote;
		if (vote != 1 && vote != 2)
			throw 'm';
		if (vote == 1)
		{
			string c;
			Base85 q;
			c = q.coder(str, l);
			file1 << c;
		}
		if (vote == 2)
		{
			string c;
			Base85 l1;
			c = l1.decoder(str, l);
			file1 << c;
		}
	}
	catch (char e)
	{
		switch (e)
		{
		case 'm':
			{
				cout << "Wrong mode" << endl;
				break;
			}
		case 'f':
		{
			cout << "Can't open file" << endl;
			break;
		}
		case 'i':
		{
			cout << "Wrong string" << endl;
			break;
		}
		}
	}
}
